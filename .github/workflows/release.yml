name: Release Builds

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: Linux x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary: psp_playlist_maker
            archive: tar.gz
          
          - name: Windows x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            binary: psp_playlist_maker.exe
            archive: zip

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Install Linux dependencies
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libxcb-render0-dev \
            libxcb-shape0-dev \
            libxcb-xfixes0-dev \
            libxkbcommon-dev \
            libssl-dev

      - name: Build release
        run: cargo build --release --target ${{ matrix.platform.target }}

      - name: Create release archive (Linux)
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          mkdir -p release
          cp target/${{ matrix.platform.target }}/release/${{ matrix.platform.binary }} release/
          cp README.md LICENSE QUICKSTART.md release/
          cd release
          tar -czf ../psp_playlist_maker-${{ matrix.platform.target }}.tar.gz .

      - name: Create release archive (Windows)
        if: matrix.platform.os == 'windows-latest'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path release
          Copy-Item target/${{ matrix.platform.target }}/release/${{ matrix.platform.binary }} release/
          Copy-Item README.md, LICENSE, QUICKSTART.md release/
          Compress-Archive -Path release/* -DestinationPath psp_playlist_maker-${{ matrix.platform.target }}.zip

      - name: Upload release assets
        uses: actions/upload-artifact@v4
        with:
          name: psp_playlist_maker-${{ matrix.platform.target }}
          path: |
            *.tar.gz
            *.zip

      - name: Attach to GitHub Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.tar.gz
            *.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
